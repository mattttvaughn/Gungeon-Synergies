// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlinVersion = '1.3.71'
        coroutinesVersion = "1.3.0"
        archLifecycleVersion = "1.1.1"
        gradleVersion = '3.6.3'
        supportlibVersion = "1.1.0"
        navigationVersion = "1.0.0"
        materialLibVersion = "1.1.0"
        retrofitVersion = '2.8.1'
        okhttpVersion = '4.5.0'
        dataBindingCompilerVersion = gradleVersion // Always need to be the same.
        roomVersion = '2.2.5'
        glideVersion = "4.11.0"
        exoplayerVersion = "2.11.1"
        workVersion = '2.3.3'
        junitVersion = "4.13"
        androidxTestRunnerVersion = '1.3.0-beta01'
        espressoVersion = '3.3.0-beta01'
        androidxAnnotationVersion = "1.1.0"
        lifecycleVersion = "2.2.0"
        ossLicenseActivityVersion = "17.0.0"
        androidXTestExtKotlinRunnerVersion = "1.1.1"
        androidXTestCoreVersion = "1.2.0"
        robolectricVersion = "4.3.1"
        archTestingVersion = '2.1.0'
        hamcrestVersion = "1.3"
        mockKVersion = "1.9.3"
        navVersion = '2.3.0-alpha03'
        daggerVersion = '2.27'
        localBroadcastManagerVersion = "1.0.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.android.gms:oss-licenses-plugin:0.10.1"

        // Safe args plugin
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Allow experimental kotlin features, like coroutines
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=io.ktor.locations.KtorExperimentalLocationsAPI"]
}